<?php


use Drupal\Core\Form\FormStateInterface;
use Drupal\node\NodeInterface;
use Drupal\Core\Routing\RouteMatchInterface;
use Drupal\file\Entity;
use Drupal\file\Entity\File;


function activities_page_attachments_alter(&$page) {
        
    $path = $current_path = \Drupal::service('path.current')->getPath();
    if ( str_contains($path, '/activities')) {
        $page['#attached']['library'][] = 'activities/activities_key';
        $page['#attached']['library'][] = 'common/common_key';
        $page['#attached']['library'][] = 'common/content_table';

        if ( str_contains($path, '/activities_item_add') || str_contains($path, 'activities_item_change') ) {
            $page['#attached']['library'][] = 'common/content_tags';
        }        

     }
}


function activities_theme($existing, $type, $theme, $path) {

    return [
        'activities-main' =>[
            'variables' => [
                'items' => NULL,
                'groups' => NULL,
                'types' => NULL,
                'events' => NULL,
                'copitems' => NULL,
            ],
        ],
        'activities-details' =>[
            'variables' => [
                'items' => NULL,
                'groups' => NULL,
                'types' => NULL,
            ],
        ],        
        'activities-admin'=>[
            'variables' => [
                'items' => NULL,
                'groups' => NULL,
                'types' => NULL,
                'events' => NULL,
                'copitems' => NULL,
            ],
        ],
        'activities-admin-events' =>[
            'variables' => [
                'items' => NULL,
                'pager' => NULL,
            ],
        ],        
        'activities-photo' =>[
            'variables' => [
                'items' => NULL,
                'groups' => NULL,
                'types' => NULL,
            ],
        ],        

        


    ];

}

/*
function fileshare_file_download($uri) {

    $scheme = \Drupal\Core\StreamWrapper\StreamWrapperManager::getScheme($uri);
    if ($scheme === 'private') {
        $uri_target = array();
        $uri_target = explode('/', \Drupal\Core\StreamWrapper\StreamWrapperManager::getTarget($uri));

        return $uri;
    } else {
        return $uri;
    }
}
*/

/**
 * Implements hook_help().
 */
function activities_help($route_name, RouteMatchInterface $route_match) {
    switch ($route_name) {
      case 'help.page.activities':
        return '<p>' . t('Activities module that provides KICP Activities.') . '</p>';
        break;
    }
  }  
    