<?php


use Drupal\Core\Form\FormStateInterface;
use Drupal\node\NodeInterface;
use Drupal\Core\Routing\RouteMatchInterface;
use Drupal\file\Entity;
use Drupal\file\Entity\File;
use Drupal\blog\Common\BlogDatatable;
use Drupal\Core\Url;

function blog_page_attachments_alter(&$page) {

    $path = $current_path = \Drupal::service('path.current')->getPath();
    $routeName = \Drupal::routeMatch()->getRouteName();    

    if (explode(".", $routeName)[0] === 'blog') {
        $page['#attached']['library'][] = 'blog/blog_key';
        $page['#attached']['library'][] = 'common/common_key';
        $page['#attached']['library'][] = 'common/common_assets';   
        $page['#attached']['library'][] = 'common/content_table';
        $page['#attached']['library'][] = 'common/common_modal';    // for "Access Control", put this line after "common/content_table"

        if ( str_contains($path, '/blog_add') || str_contains($path, '/blog_change') ) {
            $page['#attached']['library'][] = 'common/content_tags';
        }        

        if ( str_contains($path, '/blog_entry') || str_contains($path, '/blog_view')  || str_contains($path, '/blog_tag') ) {
            $page['#attached']['library'][] = 'blog/blog_form';
            $page['#attached']['library'][] = 'blog/blog_gallery';
        }	

    }

}


function blog_theme($existing, $type, $theme, $path) {

    return [
        'blogs-home' =>[
            'variables' => [
                'items' => NULL,
            ],
        ],
        'blogs-entry' =>[
            'variables' => [
                'items' => NULL,
                'my_user_id' => NULL,
                'tags' => NULL,
                'archive' => NULL,
            ],
        ],
        'blogs-view' =>[
            'variables' => [
                'items' => NULL,
                'my_user_id' => NULL,
                'delegate'  => NULL,
                'tags' => NULL,
                'archive' => NULL,                
                'tagsUrl' => NULL,
                'pager' => NULL,
            ],
        ],
        'blogs-comments' =>[
            'variables' => [
                'comments' => NULL,
            ],
        ],
        'blogs-all' =>[
            'variables' => [
                'items' => NULL,
                'my_user_id' => NULL,
                'pager' => NULL,
                'archive' => NULL,     
            ],
        ],
        'blogs-delegate' =>[
            'variables' => [
                'items' => NULL,
                'archive' => NULL,     
            ],
        ],
        'blogs-delegate-add' =>[
            'variables' => [
                'items' => NULL,
                'pager' => NULL,
                'archive' => NULL,     
                'members' => NULL,
            ],
        ],        

    ];

}

function blog_preprocess_page_title(&$variables) {
    $route_match = \Drupal::routeMatch();
    $route_name = $route_match->getRouteName();
    if ($route_name === "blog.blog_entry") {
        $entry_id = $route_match->getParameter('entry_id');
        $entry = BlogDatatable::getEntryName($entry_id);
        if ($entry) {
            $entry_name = htmlspecialchars_decode($entry['entry_title']);        
            $variables['title'] = $entry_name;
        }
    }
  }

 function blog_preprocess_html(&$variables) {

    $route_match = \Drupal::routeMatch();
    $route_name = $route_match->getRouteName();
    if ($route_name === "blog.blog_entry") {
        $entry_id = $route_match->getParameter('entry_id');
        $entry = BlogDatatable::getEntryName($entry_id);
        if ($entry) {
            $entry_name = htmlspecialchars_decode($entry['entry_title']);        
            $variables['head_title']['title'] = $entry_name;
        }
    }
  }  


/*
function fileshare_file_download($uri) {

    $scheme = \Drupal\Core\StreamWrapper\StreamWrapperManager::getScheme($uri);
    if ($scheme === 'private') {
        $uri_target = array();
        $uri_target = explode('/', \Drupal\Core\StreamWrapper\StreamWrapperManager::getTarget($uri));

        return $uri;
    } else {
        return $uri;
    }
}
*/

/**
 * Implements hook_help().
 */
function blog_help($route_name, RouteMatchInterface $route_match) {
    switch ($route_name) {
      case 'help.page.blog':
        return '<p>' . t('Blog module that provides KICP blogs.') . '</p>';
        break;
    }
  }  
    